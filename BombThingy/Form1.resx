<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSkewedSlots.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AdCWk0DD7D/+AAAAAElFTkSuQmCC
</value>
  </data>
</root>